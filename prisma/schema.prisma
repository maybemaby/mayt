// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Video {
  id               String          @id @unique @default(uuid())
  name             String
  ytId             String
  length           Int?
  thumbnail_url    String?
  thumbnail_height Int?
  thumbnail_width  Int?
  addedAt          DateTime        @default(now())
  pinned           Boolean
  videoPlaylist    VideoPlaylist[]
  channel          Channel?        @relation(fields: [channelId], references: [id], onDelete: SetNull, onUpdate: Cascade)
  channelId        String?

  VideoTag VideoTag[]
  @@map("videos")
}

model Channel {
  id     String  @id @unique @default(uuid())
  url    String
  name   String  @unique
  videos Video[]

  @@map("channels")
}

model Playlist {
  id            String          @id @unique @default(uuid())
  name          String
  createdAt     DateTime        @default(now())
  videoPlaylist VideoPlaylist[]

  @@map("playlists")
}

model VideoPlaylist {
  videoId    String
  video      Video    @relation(fields: [videoId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  playlistId String
  playlist   Playlist @relation(fields: [playlistId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@id([videoId, playlistId])
  @@map("video_playlist")
}

model TagType {
  id   String @id @unique @default(uuid())
  name String
  tags Tag[]

  @@index([name])
  @@map("tagtypes")
}

model Tag {
  id       String     @id @unique @default(uuid())
  name     String
  type     TagType?   @relation(fields: [typeId], references: [id], onDelete: SetNull, onUpdate: Cascade)
  typeId   String?
  VideoTag VideoTag[]


  @@index([typeId, name])
  @@map("tags")
}

model VideoTag {
  tagId   String
  tag     Tag    @relation(fields: [tagId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  videoId String
  video   Video  @relation(fields: [videoId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@id([videoId, tagId])
}
